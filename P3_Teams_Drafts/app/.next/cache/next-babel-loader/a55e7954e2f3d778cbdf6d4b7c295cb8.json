{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useContext } from 'react';\nimport styled from 'styled-components';\nimport { Pane, Text, Icon, Spinner } from 'evergreen-ui';\nimport { Context } from './Context';\n\nconst _ = require('lodash');\n\nconst ColumnContainer = styled.div`\n  flex: 1;\n  background-color: #fafafa;\n  border-radius: .5rem;\n  margin-right: 1rem;\n  :last-of-type {\n    margin-right: 0;\n  }\n  overflow: auto;\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none; \n  -moz-user-select: none; \n  -ms-user-select: none; \n  user-select: none;\n`;\n\nconst AnimalDashboardColumn = props => {\n  const {\n    stage,\n    data,\n    error,\n    loading,\n    columnIndex\n  } = props;\n  let data2 = '';\n  const Species = 'Dog';\n  let targetUrl = '';\n  const {\n    0: adActiveIndex,\n    1: setAdActiveIndex\n  } = useState(null);\n  const {\n    1: setAD,\n    8: specialty\n  } = useContext(Context);\n\n  if (stage === 'Animals') {\n    targetUrl = 'http://localhost:4000/animals';\n  } else if (stage === 'Breed') {\n    targetUrl = `http://localhost:4000/breeds/${Species}`;\n  } else if (stage === 'Vaccines') {\n    targetUrl = '';\n  }\n\n  data2 = fetch(targetUrl, {\n    method: 'get'\n  }).then(res => res.json()).then(json => console.log(json));\n  console.log(\"this is data2,\", data2);\n  return __jsx(ColumnContainer, null, __jsx(Pane, {\n    display: \"flex\",\n    flexDirection: \"row\",\n    marginTop: \"1rem\"\n  }, __jsx(Text, {\n    marginLeft: \"1rem\",\n    size: 500,\n    color: \"muted\"\n  }, stage), __jsx(Text, {\n    marginLeft: \".5rem\",\n    fontWeight: \"bold\",\n    size: 400\n  }, data && data.length)), loading && __jsx(Pane, null, __jsx(Spinner, {\n    margin: \"auto\",\n    marginTop: \"2rem\"\n  })), error && __jsx(Pane, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }, __jsx(Pane, null, __jsx(Icon, {\n    size: \"20\",\n    marginX: \"auto\",\n    marginTop: \"2rem\",\n    icon: \"warning-sign\",\n    color: \"muted\"\n  })), __jsx(Pane, null, __jsx(Text, {\n    color: \"muted\"\n  }, \"Error\"))));\n};\n\nexport default AnimalDashboardColumn;","map":null,"metadata":{},"sourceType":"module"}