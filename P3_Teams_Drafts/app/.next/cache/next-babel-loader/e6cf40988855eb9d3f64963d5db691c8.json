{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useContext, useEffect } from 'react';\nimport { Select, Button, Pane, Tooltip, Position, toaster, TextInput, SearchInput } from 'evergreen-ui';\nimport AddAnimalModal from './AddAnimalModal';\nimport { Context } from './Context';\n\nconst AnimalDashboardFilters = props => {\n  const {\n    scheduleButton\n  } = props;\n  const {\n    0: showModal,\n    1: setShowModal\n  } = useState(false);\n  const {\n    6: date,\n    7: setDate,\n    8: specialty,\n    9: setSpecialty,\n    10: acceptance,\n    11: setAcceptance,\n    12: duration,\n    13: setDuration,\n    15: setReset,\n    16: candidate,\n    17: setCandidate,\n    18: position,\n    19: setPosition\n  } = useContext(Context); // const debouncedCandidate = useDebounce(candidate, 0.0001)\n\n  useEffect(() => {\n    setReset(true);\n  }, [date, specialty, acceptance, duration]);\n  return __jsx(Pane, {\n    display: \"flex\",\n    marginY: \"2rem\"\n  }, __jsx(Pane, null, __jsx(SearchInput, {\n    width: \"20rem\",\n    marginRight: \"2rem\",\n    placeholder: \"Search for an Animal...\"\n  })), __jsx(Pane, null, __jsx(Select, {\n    marginRight: \"2rem\",\n    value: specialty,\n    onChange: e => setSpecialty(e.target.value)\n  }, __jsx(\"option\", {\n    value: \"Dogs\",\n    defaultValue: true\n  }, \"Dogs\"), __jsx(\"option\", {\n    value: \"Cats\"\n  }, \"Cats\"))), __jsx(Pane, null, __jsx(Select, {\n    marginRight: \"2rem\",\n    value: acceptance,\n    onChange: e => setAcceptance(e.target.value)\n  }, __jsx(\"option\", {\n    value: \"All Breeds\",\n    defaultValue: true\n  }, \"All Breeds\"), __jsx(\"option\", {\n    value: \"Some Other Breeds\"\n  }, \"Some Other Breeds\"))), __jsx(Pane, null, __jsx(Button, {\n    marginRight: \"2rem\",\n    onClick: () => setShowModal(true)\n  }, \"Add Animal\"), __jsx(AddAnimalModal, {\n    showModal: showModal,\n    setShowModal: setShowModal\n  })));\n};\n\nfunction useDebounce(value, delay) {\n  const {\n    0: debouncedValue,\n    1: setDebouncedValue\n  } = useState(value);\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value]);\n  return debouncedValue;\n}\n\nexport default AnimalDashboardFilters;","map":null,"metadata":{},"sourceType":"module"}