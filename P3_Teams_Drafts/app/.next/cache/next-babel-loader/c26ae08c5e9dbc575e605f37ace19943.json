{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useContext } from 'react';\nimport styled from 'styled-components';\nimport { toaster } from 'evergreen-ui';\nimport { Query } from 'react-apollo';\nimport { Context } from './Context';\nimport AnimalDashboardColumn from './AnimalDashboardColumn';\nimport Queries from '../graphql/queries';\nimport { useQuery } from '@apollo/react-hooks';\nconst Categories = ['Animals ', 'Breeds', 'Vaccines'];\nconst SchedulerContainer = styled.div`\n  display: flex;\n  flex: 1;\n  min-height: 70vh;\n  max-height: 70vh;\n\n`;\n\nconst AnimalDashboard = props => {\n  const {\n    setScheduleButton\n  } = props;\n  const {\n    3: setSmes\n  } = useContext(Context);\n  var targetUrl = 'http://localhost:4000/animals';\n  fetch(targetUrl, {\n    method: 'get'\n  }).then(res => res.json()).then(json => console.log(json)); // const { loading, error, data } = useQuery(Queries.ALL_ANIMALS)\n  // if (data) {\n  //   data.map((animal, index) => {\n  //     console.log(animal)\n  //   })\n  // }\n  // var proxyUrl = 'https://cors-anywhere.herokuapp.com/'\n  // var targetUrl = 'http://localhost:4000/animals'\n  // fetch(targetUrl)\n  //   .then(res => {\n  //     res.json()\n  //     console.log(blob)\n  //   })\n  //   .then(data => {\n  //     console.table(data)\n  //     document.querySelector('pre').innerHTML = JSON.stringify(data, null, 2)\n  //     return data\n  //   })\n  //   .catch(e => {\n  //     console.log(e)\n  //     return e\n  //   })\n\n  return __jsx(SchedulerContainer, null, __jsx(Query, {\n    query: Queries.ALL_ANIMALS\n  }, ({\n    data,\n    error,\n    loading\n  }) => {\n    if (error) {\n      toaster.danger('Something went wrong when fetching the Animals', {\n        id: 'animalDashboard',\n        description: 'Check your network connection or try again later.'\n      });\n    }\n\n    return Categories.map((role, index) => {\n      return __jsx(AnimalDashboardColumn, {\n        key: index,\n        columnIndex: index,\n        stage: role,\n        data: data && data.filter(c => {\n          return c.role === role;\n        }),\n        error: error,\n        loading: loading\n      });\n    });\n  }));\n};\n\nexport default AnimalDashboard;","map":null,"metadata":{},"sourceType":"module"}